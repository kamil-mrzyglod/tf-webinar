name: 'Terraform - Kubernetes'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: k8s/aks-cluster-tf

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Login to Azure
    - name: Azure Login
      uses: Azure/login@v1.4.6
      with:
        creds: ${{ secrets.SP_CREDS }}

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -var appId="${{ secrets.SP_CLIENTID }}" -var spPass="${{ secrets.SP_PASSWORD }}"

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -var appId="${{ secrets.SP_CLIENTID }}" -var spPass="${{ secrets.SP_PASSWORD }}"

      # On push to "main", build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      run: terraform apply -auto-approve -var appId="${{ secrets.SP_CLIENTID }}" -var spPass="${{ secrets.SP_PASSWORD }}"
